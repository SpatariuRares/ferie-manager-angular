@import 'variables';
@import 'mixins';

// --------------------------------------------------
// THEME MANAGER
// --------------------------------------------------

// Tema di base: variabili che cambiano a seconda del tema
$themes: (
    light: (
    background: $color-background,
    surface: $color-surface,
    border: $color-border,
    text: $color-text,
    text-secondary: lighten($color-text, 20%),
    shadow: $color-shadow,
    primary: $primary,
    accent: $accent,
    warn: $warn
  ),
  dark: (
    background: #121212,
    surface: #1e1e1e,
    border: #333333,
    text: #f5f5f5,
    text-secondary: darken(#f5f5f5, 20%),
    shadow: rgba(0, 0, 0, 0.3),
    primary: lighten($primary, 10%),
    accent: lighten($accent, 10%),
    warn: lighten($warn, 10%)
  )
);

$theme-map: null !default;


// Mixin per applicare stili specifici del tema
@mixin themed() {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $value in $map {
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

// Funzione per recuperare i valori del tema corrente
@function t($key) {
  @return map-get($theme-map, $key);
}

// Esempio di uso:
// .my-component {
//   @include themed() {
//     background-color: t('background');
//     color: t('text');
//   }
// }

// --------------------------------------------------
// APPLICAZIONE TEMA PREDEFINITO
// --------------------------------------------------

// Definizione delle classi di tema
.theme-light {
  --background-color: #{map-get(map-get($themes, 'light'), 'background')};
  --surface-color: #{map-get(map-get($themes, 'light'), 'surface')};
  --border-color: #{map-get(map-get($themes, 'light'), 'border')};
  --text-color: #{map-get(map-get($themes, 'light'), 'text')};
  --text-secondary-color: #{map-get(map-get($themes, 'light'), 'text-secondary')};
  --shadow: #{map-get(map-get($themes, 'light'), 'shadow')};

  --primary-color: #{$primary};
  --accent-color: #{$accent};
  --warn-color: #{$warn};
}

.theme-dark {
  --background-color: #{map-get(map-get($themes, 'dark'), 'background')};
  --surface-color: #{map-get(map-get($themes, 'dark'), 'surface')};
  --border-color: #{map-get(map-get($themes, 'dark'), 'border')};
  --text-color: #{map-get(map-get($themes, 'dark'), 'text')};
  --text-secondary-color: #{map-get(map-get($themes, 'dark'), 'text-secondary')};
  --shadow: #{map-get(map-get($themes, 'dark'), 'shadow')};

  --primary-color: #{lighten($primary, 10%)};
  --accent-color: #{lighten($accent, 10%)};
  --warn-color: #{lighten($warn, 10%)};
}

// Applicazione delle variabili CSS agli elementi globali
body {
  background-color: var(--background-color);
  color: var(--text-color);
}

// Esempio di componenti che usano le variabili del tema
.card {
  background-color: var(--surface-color);
  border: 1px solid var(--border-color);
  box-shadow: 0 2px 4px var(--shadow);
}

.text-secondary {
  color: var(--text-secondary-color);
}

// CSS per il toggle del tema
.theme-toggle {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;

  input {
    opacity: 0;
    width: 0;
    height: 0;

    &:checked + .slider {
      background-color: $primary;

      &:before {
        transform: translateX(26px);
      }
    }
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: $transition-base;
    border-radius: 34px;

    &:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: $transition-base;
      border-radius: 50%;
    }
  }
}